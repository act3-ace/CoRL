# -------------------------------------------------------------------------------
# Air Force Research Laboratory (AFRL) Autonomous Capabilities Team (ACT3)
# Reinforcement Learning (RL) Core.
#
# This is a US Government Work not subject to copyright protection in the US.
#
# The use, dissemination or disclosure of data in this file is subject to
# limitation or restriction. See accompanying README and LICENSE for details.
# -------------------------------------------------------------------------------version: "3.7"
version: "3.7"
# some environment variables in this compose (for example $CODE_PATH) are set by the .env file in the repo root directory
# to change those variables change them in the .env file not in this compose file

services:
  dummy:
    build:
      context: .
      dockerfile: Dockerfile
      args: &default-args
        OCI_REGISTRY: ghcr.io
        PROJ_PKG: /opt/project/corl
        PKG_ROOT: /opt/libcorl
        AGENT_BASE_VERSION: latest
        AGENT_BASE_IMAGE_PATH: /act3-ace/agents-base
    environment: &development-environment
      SSH_AUTH_SOCK: "$SSH_AUTH_SOCK"
      DISPLAY: "$DISPLAY"
      <<: *default-args
      
    volumes: &development-volumes
      # passing through this file allows opening windows from the container in your host computer
      # *** NOTE THIS IS LINUX SPECIFIC ITEM *** Updates needed for Virtual based setups
      - "/tmp/.X11-unix:/tmp/.X11-unix:rw"
      #
      # for development, link the host folder containing code to /opt/project in container
      - "$CODE_PATH/:/opt/project"
      #
      # for development, link the host folder containing data to /opt/data/corl in container
      - "$DATA_PATH:/opt/data/corl"
      #
      # copy in command history
      - "corl-bashhistory:/commandhistory"
      #
      # VSCODE items
      # - "vscode-server-extensions:/home/$NEW_USER/.vscode-server/extensions"
      # - "vscode-server-extensions-insiders:/home/$NEW_USER/.vscode-server-insiders/extensions"
      
    # deploy: &development-deploy
    #   resources:
    #     reservations:
    #       devices:
    #         - driver: nvidia
    #           count: 1
    #           capabilities: [gpu]

  deps:
    image: ghcr.io/act3-ace/corl/deps:latest
    build:
      context: .
      dockerfile: Dockerfile
      target: whl_dependencies_hack
      args:
        <<: *default-args
    volumes: *development-volumes
    environment:
      <<: *development-environment

  develop:
    image: ghcr.io/act3-ace/corl/develop:latest
    build:
      context: .
      dockerfile: Dockerfile
      target: develop
      args:
        <<: *default-args
    volumes: *development-volumes
    environment:
      <<: *development-environment
      
  build:
    image: ghcr.io/act3-ace/corl:latest
    build:
      context: .
      dockerfile: Dockerfile
      target: build
      args:
        <<: *default-args
    volumes: *development-volumes
    environment:
      <<: *development-environment

  cicd:
    image: ghcr.io/act3-ace/corl/cicd:latest
    build:
      context: .
      dockerfile: Dockerfile
      target: develop
      args:
        <<: *default-args
    volumes: *development-volumes
    environment:
      <<: *development-environment
    
  coder-user:
    image: ghcr.io/act3-ace/corl/coder:latest
    build:
      context: .
      dockerfile: Dockerfile
      target: coder-user
      args:
        <<: *default-args
    user: 1000:1000
    ports:
      - 8888:8888
      - 8000:8000  # mkdocs
      - 6006:6006  # Tensorboard
    volumes: *development-volumes
    environment:
      <<: *development-environment

  #########################################################################################
  # Test UTILITIES with DOCKER
  #########################################################################################
  docs:
    image: ghcr.io/act3-ace/corl/develop:latest

    environment:
      <<: *development-environment
    working_dir: /opt/project

    # for development, link the host folder containing code to /opt/project in container
    volumes:
      - "$CODE_PATH/:/opt/project"

    # Overrides default command so things don't shut down after the process ends.
    command: bash -c "
      poetry config virtualenvs.create false
      && poetry install --with lint,docs,profile --without torch
      && mkdocs build"

  pre-commit:
    image: ghcr.io/act3-ace/corl/development/develop:latest

    environment:
      <<: *development-environment
    working_dir: /opt/project

    # for development, link the host folder containing code to /opt/project in container
    volumes:
      - "$CODE_PATH/:/opt/project"

    # Overrides default command so things don't shut down after the process ends.
    command: bash -c "
      poetry config virtualenvs.create false
      && conda install -c anaconda git
      && poetry install --with lint --without docs,profile,torch
      && poetry run pre-commit run --all"

  pytest:
    image: ghcr.io/act3-ace/corl/develop:latest

    environment:
      <<: *development-environment
    working_dir: /opt/project
    # for development, link the host folder containing code to /opt/project in container
    volumes:
      - "$CODE_PATH/:/opt/project"

    # Overrides default command so things don't shut down after the process ends.
    command: bash -c "
      poetry config virtualenvs.create false
      && poetry install --with lint,docs,profile,test --without torch
      && pytest -s -v ${UNIT_TEST_DIR} --cov=${SRC_DIR} --cov-report term-missing --cov-report html --junitxml=junit.xml"

  #########################################################################################
  # POETRY UTILITIES with DOCKER
  #########################################################################################
  poetry-lock:
    image: ghcr.io/act3-ace/corl/develop:latest

    environment:
      <<: *development-environment

    working_dir: /opt/project

    # for development, link the host folder containing code to /opt/project in container
    volumes:
      - "$CODE_PATH/:/opt/project"

    # Overrides default command so things don't shut down after the process ends.
    command: bash -c "
      poetry config virtualenvs.create false
      && poetry lock
      && poetry install -vv --no-root --no-interaction --no-ansi --without torch"

  poetry-install:
    image: ghcr.io/act3-ace/corl/develop:latest

    environment:
      <<: *development-environment
    working_dir: /opt/project

    # for development, link the host folder containing code to /opt/project in container
    volumes:
      - "$CODE_PATH/:/opt/project"

    # Overrides default command so things don't shut down after the process ends.
    command: bash -c "
      poetry config virtualenvs.create false
      && poetry install"

  poetry-update:
    image: ghcr.io/act3-ace/corl/develop:latest

    environment:
      <<: *development-environment
    working_dir: /opt/project

    # for development, link the host folder containing code to /opt/project in container
    volumes:
      - "$CODE_PATH/:/opt/project"

    # Overrides default command so things don't shut down after the process ends.
    command: bash -c "
      && poetry config virtualenvs.create false
      && poetry update"

  poetry-build-dist:
    image: ghcr.io/act3-ace/corl/develop:latest

    environment:
      <<: *development-environment
    working_dir: /opt/project

    # for development, link the host folder containing code to /opt/project in container
    volumes:
      - "$CODE_PATH/:/opt/project"

    # Overrides default command so things don't shut down after the process ends.
    command: bash -c "
      poetry config virtualenvs.create false
      && poetry build -n"

#########################################################################################
# Volumes Stores
#########################################################################################
volumes:
  corl-bashhistory:
  vscode-server-extensions:
  vscode-server-extensions-insiders:

#########################################################################################
# Network
#########################################################################################
networks:
  default:
    name: act3
